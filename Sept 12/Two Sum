Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        # O(n)Using dictionary
        elements = {}
        lenNums = len(nums)
        
        # Add all the elements from the list to dictionary
        for i in range(lenNums):
            elements[nums[i]]=i
        
        # Look for pair (element , target-elememt)
        for i in range(lenNums):
            if target - nums[i] in elements and i != elements[target - nums[i]]:
                return [i,elements[target - nums[i]]]
            
        # O(n^2) Compare all possible pairs
#         for i in range(len(nums)-1):
#             for j in range(i+1,len(nums)):
#                 if nums[i]+nums[j]==target:
#                     return [i,j]

       
            
        
                                         